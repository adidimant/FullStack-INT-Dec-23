"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MouseMoveCollector = void 0;
var _Utils = require("../../utils/Utils");
class MouseMoveCollector {
  data = [];
  constructor(interval, bufferSize) {
    this.interval = interval;
    this.bufferSize = bufferSize;
  }
  getData() {
    return this.data;
  }
  getKey() {
    return 'mouseMove';
  }
  startCollect() {
    try {
      document.addEventListener('mousemove', this.handleMouseMove);
    } catch (error) {
      console.error('Failed to start mouse move collection:', error);
    }
  }
  finishCollect() {
    try {
      document.removeEventListener('mousemove', this.handleMouseMove);
      this.data = [];
    } catch (error) {
      console.error('Error finishing mouse move collection:', error);
    }
  }
  handleMouseMove = event => {
    try {
      this.data = _Utils.Utils.maintainLastXItems(this.data, this.bufferSize, event);
    } catch (error) {
      console.error('Error handling mouse move:', error);
    }
  };
}
exports.MouseMoveCollector = MouseMoveCollector;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfVXRpbHMiLCJyZXF1aXJlIiwiTW91c2VNb3ZlQ29sbGVjdG9yIiwiZGF0YSIsImNvbnN0cnVjdG9yIiwiaW50ZXJ2YWwiLCJidWZmZXJTaXplIiwiZ2V0RGF0YSIsImdldEtleSIsInN0YXJ0Q29sbGVjdCIsImRvY3VtZW50IiwiYWRkRXZlbnRMaXN0ZW5lciIsImhhbmRsZU1vdXNlTW92ZSIsImVycm9yIiwiY29uc29sZSIsImZpbmlzaENvbGxlY3QiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiZXZlbnQiLCJVdGlscyIsIm1haW50YWluTGFzdFhJdGVtcyIsImV4cG9ydHMiXSwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvY29sbGVjdG9ycy9jb250aW51b3VzL01vdXNlTW92ZUNvbGxlY3Rvci50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb250aW51b3VzQ29sbGVjdG9yIH0gZnJvbSAnLi4vLi4vaW50ZXJmYWNlcy9Db250aW51b3VzQ29sbGVjdG9yJztcbmltcG9ydCB7IFV0aWxzIH0gZnJvbSAnLi4vLi4vdXRpbHMvVXRpbHMnO1xuXG5leHBvcnQgY2xhc3MgTW91c2VNb3ZlQ29sbGVjdG9yIGltcGxlbWVudHMgQ29udGludW91c0NvbGxlY3RvcjxNb3VzZUV2ZW50PiB7XG4gIHB1YmxpYyBpbnRlcnZhbDogbnVtYmVyO1xuICBwdWJsaWMgYnVmZmVyU2l6ZTogbnVtYmVyO1xuICBwcml2YXRlIGRhdGE6IE1vdXNlRXZlbnRbXSA9IFtdO1xuXG4gIGNvbnN0cnVjdG9yKGludGVydmFsOiBudW1iZXIsIGJ1ZmZlclNpemU6IG51bWJlcikge1xuICAgIHRoaXMuaW50ZXJ2YWwgPSBpbnRlcnZhbDtcbiAgICB0aGlzLmJ1ZmZlclNpemUgPSBidWZmZXJTaXplO1xuICB9XG5cbiAgZ2V0RGF0YSgpOiBNb3VzZUV2ZW50W10ge1xuICAgIHJldHVybiB0aGlzLmRhdGE7XG4gIH1cblxuICBnZXRLZXkoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gJ21vdXNlTW92ZSc7XG4gIH1cblxuICBzdGFydENvbGxlY3QoKTogdm9pZCB7XG4gICAgdHJ5IHtcbiAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlbW92ZScsIHRoaXMuaGFuZGxlTW91c2VNb3ZlKTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcignRmFpbGVkIHRvIHN0YXJ0IG1vdXNlIG1vdmUgY29sbGVjdGlvbjonLCBlcnJvcik7XG4gICAgfVxuICB9XG5cbiAgZmluaXNoQ29sbGVjdCgpOiB2b2lkIHtcbiAgICB0cnkge1xuICAgICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcignbW91c2Vtb3ZlJywgdGhpcy5oYW5kbGVNb3VzZU1vdmUpO1xuICAgICAgdGhpcy5kYXRhID0gW107XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGZpbmlzaGluZyBtb3VzZSBtb3ZlIGNvbGxlY3Rpb246JywgZXJyb3IpO1xuICAgIH1cbiAgfVxuXG4gIHByaXZhdGUgaGFuZGxlTW91c2VNb3ZlID0gKGV2ZW50OiBNb3VzZUV2ZW50KTogdm9pZCA9PiB7XG4gICAgdHJ5IHtcbiAgICAgIHRoaXMuZGF0YSA9IFV0aWxzLm1haW50YWluTGFzdFhJdGVtcyh0aGlzLmRhdGEsIHRoaXMuYnVmZmVyU2l6ZSwgZXZlbnQpO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBoYW5kbGluZyBtb3VzZSBtb3ZlOicsIGVycm9yKTtcbiAgICB9XG4gIH1cbn0iXSwibWFwcGluZ3MiOiI7Ozs7OztBQUNBLElBQUFBLE1BQUEsR0FBQUMsT0FBQTtBQUVPLE1BQU1DLGtCQUFrQixDQUE0QztFQUdqRUMsSUFBSSxHQUFpQixFQUFFO0VBRS9CQyxXQUFXQSxDQUFDQyxRQUFnQixFQUFFQyxVQUFrQixFQUFFO0lBQ2hELElBQUksQ0FBQ0QsUUFBUSxHQUFHQSxRQUFRO0lBQ3hCLElBQUksQ0FBQ0MsVUFBVSxHQUFHQSxVQUFVO0VBQzlCO0VBRUFDLE9BQU9BLENBQUEsRUFBaUI7SUFDdEIsT0FBTyxJQUFJLENBQUNKLElBQUk7RUFDbEI7RUFFQUssTUFBTUEsQ0FBQSxFQUFXO0lBQ2YsT0FBTyxXQUFXO0VBQ3BCO0VBRUFDLFlBQVlBLENBQUEsRUFBUztJQUNuQixJQUFJO01BQ0ZDLFFBQVEsQ0FBQ0MsZ0JBQWdCLENBQUMsV0FBVyxFQUFFLElBQUksQ0FBQ0MsZUFBZSxDQUFDO0lBQzlELENBQUMsQ0FBQyxPQUFPQyxLQUFLLEVBQUU7TUFDZEMsT0FBTyxDQUFDRCxLQUFLLENBQUMsd0NBQXdDLEVBQUVBLEtBQUssQ0FBQztJQUNoRTtFQUNGO0VBRUFFLGFBQWFBLENBQUEsRUFBUztJQUNwQixJQUFJO01BQ0ZMLFFBQVEsQ0FBQ00sbUJBQW1CLENBQUMsV0FBVyxFQUFFLElBQUksQ0FBQ0osZUFBZSxDQUFDO01BQy9ELElBQUksQ0FBQ1QsSUFBSSxHQUFHLEVBQUU7SUFDaEIsQ0FBQyxDQUFDLE9BQU9VLEtBQUssRUFBRTtNQUNkQyxPQUFPLENBQUNELEtBQUssQ0FBQyx3Q0FBd0MsRUFBRUEsS0FBSyxDQUFDO0lBQ2hFO0VBQ0Y7RUFFUUQsZUFBZSxHQUFJSyxLQUFpQixJQUFXO0lBQ3JELElBQUk7TUFDRixJQUFJLENBQUNkLElBQUksR0FBR2UsWUFBSyxDQUFDQyxrQkFBa0IsQ0FBQyxJQUFJLENBQUNoQixJQUFJLEVBQUUsSUFBSSxDQUFDRyxVQUFVLEVBQUVXLEtBQUssQ0FBQztJQUN6RSxDQUFDLENBQUMsT0FBT0osS0FBSyxFQUFFO01BQ2RDLE9BQU8sQ0FBQ0QsS0FBSyxDQUFDLDRCQUE0QixFQUFFQSxLQUFLLENBQUM7SUFDcEQ7RUFDRixDQUFDO0FBQ0g7QUFBQ08sT0FBQSxDQUFBbEIsa0JBQUEsR0FBQUEsa0JBQUEiLCJpZ25vcmVMaXN0IjpbXX0=