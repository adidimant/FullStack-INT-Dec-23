"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.VisibilityChangeCollector = void 0;
var _Utils = require("../../utils/Utils");
class VisibilityChangeCollector {
  data = [];
  constructor(interval, bufferSize) {
    this.interval = interval;
    this.bufferSize = bufferSize;
  }
  getData() {
    return this.data;
  }
  getKey() {
    return 'visibilityChange';
  }
  startCollect() {
    try {
      document.addEventListener('visibilitychange', this.handleVisibilityChange);
    } catch (error) {
      console.error('Failed to start visibility change collection:', error);
    }
  }
  finishCollect() {
    try {
      document.removeEventListener('visibilitychange', this.handleVisibilityChange);
      this.data = [];
    } catch (error) {
      console.error('Error finishing visibility change collection:', error);
    }
  }
  handleVisibilityChange = () => {
    try {
      const visibilityData = {
        isVisible: !document.hidden,
        timestamp: Date.now()
      };
      this.data = _Utils.Utils.maintainLastXItems(this.data, this.bufferSize, visibilityData);
    } catch (error) {
      console.error('Error handling visibility change:', error);
    }
  };
}
exports.VisibilityChangeCollector = VisibilityChangeCollector;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfVXRpbHMiLCJyZXF1aXJlIiwiVmlzaWJpbGl0eUNoYW5nZUNvbGxlY3RvciIsImRhdGEiLCJjb25zdHJ1Y3RvciIsImludGVydmFsIiwiYnVmZmVyU2l6ZSIsImdldERhdGEiLCJnZXRLZXkiLCJzdGFydENvbGxlY3QiLCJkb2N1bWVudCIsImFkZEV2ZW50TGlzdGVuZXIiLCJoYW5kbGVWaXNpYmlsaXR5Q2hhbmdlIiwiZXJyb3IiLCJjb25zb2xlIiwiZmluaXNoQ29sbGVjdCIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJ2aXNpYmlsaXR5RGF0YSIsImlzVmlzaWJsZSIsImhpZGRlbiIsInRpbWVzdGFtcCIsIkRhdGUiLCJub3ciLCJVdGlscyIsIm1haW50YWluTGFzdFhJdGVtcyIsImV4cG9ydHMiXSwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvY29sbGVjdG9ycy9jb250aW51b3VzL1Zpc2liaWxpdHlDaGFuZ2VDb2xsZWN0b3IudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29udGludW91c0NvbGxlY3RvciB9IGZyb20gJy4uLy4uL2ludGVyZmFjZXMvQ29udGludW91c0NvbGxlY3Rvcic7XG5pbXBvcnQgeyBVdGlscyB9IGZyb20gJy4uLy4uL3V0aWxzL1V0aWxzJztcblxuaW50ZXJmYWNlIFZpc2liaWxpdHlEYXRhIHtcbiAgaXNWaXNpYmxlOiBib29sZWFuO1xuICB0aW1lc3RhbXA6IG51bWJlcjtcbn1cblxuZXhwb3J0IGNsYXNzIFZpc2liaWxpdHlDaGFuZ2VDb2xsZWN0b3IgaW1wbGVtZW50cyBDb250aW51b3VzQ29sbGVjdG9yPFZpc2liaWxpdHlEYXRhPiB7XG4gIHB1YmxpYyBpbnRlcnZhbDogbnVtYmVyO1xuICBwdWJsaWMgYnVmZmVyU2l6ZTogbnVtYmVyO1xuICBwcml2YXRlIGRhdGE6IFZpc2liaWxpdHlEYXRhW10gPSBbXTtcblxuICBjb25zdHJ1Y3RvcihpbnRlcnZhbDogbnVtYmVyLCBidWZmZXJTaXplOiBudW1iZXIpIHtcbiAgICB0aGlzLmludGVydmFsID0gaW50ZXJ2YWw7XG4gICAgdGhpcy5idWZmZXJTaXplID0gYnVmZmVyU2l6ZTtcbiAgfVxuXG4gIGdldERhdGEoKTogVmlzaWJpbGl0eURhdGFbXSB7XG4gICAgcmV0dXJuIHRoaXMuZGF0YTtcbiAgfVxuXG4gIGdldEtleSgpOiBzdHJpbmcge1xuICAgIHJldHVybiAndmlzaWJpbGl0eUNoYW5nZSc7XG4gIH1cblxuICBzdGFydENvbGxlY3QoKTogdm9pZCB7XG4gICAgdHJ5IHtcbiAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ3Zpc2liaWxpdHljaGFuZ2UnLCB0aGlzLmhhbmRsZVZpc2liaWxpdHlDaGFuZ2UpO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdGYWlsZWQgdG8gc3RhcnQgdmlzaWJpbGl0eSBjaGFuZ2UgY29sbGVjdGlvbjonLCBlcnJvcik7XG4gICAgfVxuICB9XG5cbiAgZmluaXNoQ29sbGVjdCgpOiB2b2lkIHtcbiAgICB0cnkge1xuICAgICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigndmlzaWJpbGl0eWNoYW5nZScsIHRoaXMuaGFuZGxlVmlzaWJpbGl0eUNoYW5nZSk7XG4gICAgICB0aGlzLmRhdGEgPSBbXTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgZmluaXNoaW5nIHZpc2liaWxpdHkgY2hhbmdlIGNvbGxlY3Rpb246JywgZXJyb3IpO1xuICAgIH1cbiAgfVxuXG4gIHByaXZhdGUgaGFuZGxlVmlzaWJpbGl0eUNoYW5nZSA9ICgpOiB2b2lkID0+IHtcbiAgICB0cnkge1xuICAgICAgY29uc3QgdmlzaWJpbGl0eURhdGE6IFZpc2liaWxpdHlEYXRhID0ge1xuICAgICAgICBpc1Zpc2libGU6ICFkb2N1bWVudC5oaWRkZW4sXG4gICAgICAgIHRpbWVzdGFtcDogRGF0ZS5ub3coKVxuICAgICAgfTtcbiAgICAgIHRoaXMuZGF0YSA9IFV0aWxzLm1haW50YWluTGFzdFhJdGVtcyh0aGlzLmRhdGEsIHRoaXMuYnVmZmVyU2l6ZSwgdmlzaWJpbGl0eURhdGEpO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBoYW5kbGluZyB2aXNpYmlsaXR5IGNoYW5nZTonLCBlcnJvcik7XG4gICAgfVxuICB9XG59Il0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFDQSxJQUFBQSxNQUFBLEdBQUFDLE9BQUE7QUFPTyxNQUFNQyx5QkFBeUIsQ0FBZ0Q7RUFHNUVDLElBQUksR0FBcUIsRUFBRTtFQUVuQ0MsV0FBV0EsQ0FBQ0MsUUFBZ0IsRUFBRUMsVUFBa0IsRUFBRTtJQUNoRCxJQUFJLENBQUNELFFBQVEsR0FBR0EsUUFBUTtJQUN4QixJQUFJLENBQUNDLFVBQVUsR0FBR0EsVUFBVTtFQUM5QjtFQUVBQyxPQUFPQSxDQUFBLEVBQXFCO0lBQzFCLE9BQU8sSUFBSSxDQUFDSixJQUFJO0VBQ2xCO0VBRUFLLE1BQU1BLENBQUEsRUFBVztJQUNmLE9BQU8sa0JBQWtCO0VBQzNCO0VBRUFDLFlBQVlBLENBQUEsRUFBUztJQUNuQixJQUFJO01BQ0ZDLFFBQVEsQ0FBQ0MsZ0JBQWdCLENBQUMsa0JBQWtCLEVBQUUsSUFBSSxDQUFDQyxzQkFBc0IsQ0FBQztJQUM1RSxDQUFDLENBQUMsT0FBT0MsS0FBSyxFQUFFO01BQ2RDLE9BQU8sQ0FBQ0QsS0FBSyxDQUFDLCtDQUErQyxFQUFFQSxLQUFLLENBQUM7SUFDdkU7RUFDRjtFQUVBRSxhQUFhQSxDQUFBLEVBQVM7SUFDcEIsSUFBSTtNQUNGTCxRQUFRLENBQUNNLG1CQUFtQixDQUFDLGtCQUFrQixFQUFFLElBQUksQ0FBQ0osc0JBQXNCLENBQUM7TUFDN0UsSUFBSSxDQUFDVCxJQUFJLEdBQUcsRUFBRTtJQUNoQixDQUFDLENBQUMsT0FBT1UsS0FBSyxFQUFFO01BQ2RDLE9BQU8sQ0FBQ0QsS0FBSyxDQUFDLCtDQUErQyxFQUFFQSxLQUFLLENBQUM7SUFDdkU7RUFDRjtFQUVRRCxzQkFBc0IsR0FBR0EsQ0FBQSxLQUFZO0lBQzNDLElBQUk7TUFDRixNQUFNSyxjQUE4QixHQUFHO1FBQ3JDQyxTQUFTLEVBQUUsQ0FBQ1IsUUFBUSxDQUFDUyxNQUFNO1FBQzNCQyxTQUFTLEVBQUVDLElBQUksQ0FBQ0MsR0FBRyxDQUFDO01BQ3RCLENBQUM7TUFDRCxJQUFJLENBQUNuQixJQUFJLEdBQUdvQixZQUFLLENBQUNDLGtCQUFrQixDQUFDLElBQUksQ0FBQ3JCLElBQUksRUFBRSxJQUFJLENBQUNHLFVBQVUsRUFBRVcsY0FBYyxDQUFDO0lBQ2xGLENBQUMsQ0FBQyxPQUFPSixLQUFLLEVBQUU7TUFDZEMsT0FBTyxDQUFDRCxLQUFLLENBQUMsbUNBQW1DLEVBQUVBLEtBQUssQ0FBQztJQUMzRDtFQUNGLENBQUM7QUFDSDtBQUFDWSxPQUFBLENBQUF2Qix5QkFBQSxHQUFBQSx5QkFBQSIsImlnbm9yZUxpc3QiOltdfQ==